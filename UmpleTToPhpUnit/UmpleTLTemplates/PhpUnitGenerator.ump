use UmpleNotice.ump;
use members_Setup.ump;
use members_TearDown.ump;
use where_init.ump;
use members_AllTestCases.ump;




namespace cruise.umple.unitGen.phpUnit;

external interface ILang{}

class PhpUnitGenerator {
    depend cruise.umple.compiler.*;
    depend cruise.umple.util.*;
    depend java.util.*;
	depend cruise.umple.testgenerator.*;
	depend cruise.umple.testgenerator.Comment;
	depend cruise.umple.testgenerator.Action;

    isA ILang;

    // Add a newline to the end of the input
    private void appendln(StringBuilder buffer, String input, Object... variables)
    {
        append(buffer, input + "\n", variables);
    }
    
    @Override
	public String getCode(UmpleModel model, UmpleElement uElement) {
	// TODO Auto-generated method stub
	return null;
	}

    // This method will be used to append formatted strings
    // i.e. format("Hello {0} {1}", "andrew","forward");
    private void append(StringBuilder buffer, String input, Object... variables)
    {
        buffer.append(StringFormatter.format(input,variables));
    }

    emit getCode(TestModel model)(PhpUnitGenerator);

    PhpUnitGenerator <<!<</*PhpUnitGenerator*/>><<@ UmpleTToPhpUnit.UmpleNotice >>
<<#
  //UmpleClass uClass = (UmpleClass) uElement;
  //GeneratedClass gClass = uClass.getGeneratedClass();
  TestCasePhpUnitGenerator gen = new TestCasePhpUnitGenerator(null, null, null, realSb, null);
  gen.setTestModel(model);
  
  //appendln(realSb, gen.translate("beforeCode", uClass));

  HashMap<String,String> codeInjectionMap = new HashMap<String,String>();
  
  boolean isFirst = true;
#>>



<<#if (model.numberOfComments() > 0) {
    	 
    	 for (Comment ct : model.getComments())
    	 {
    	 if(!ct.getIsInline())
    	 {
    		 append(realSb, "\n{0}", Comment.format("Multiline",model.getComments(), false));
    		 
    	 }
    	 
    	 
    	 else { 
    		 append(realSb, "\n{0}", Comment.format("Inline",model.getComments(), true));
    		 }
    	 
    	 }
    	 
     
     }#>>

<?php

////---- Tests for  <<=model.getFile()>>----/////



class <<=model.getFile().subSequence(0, model.getFile().length()-4)>>Test extends UnitTestCase{
 
 <<@UmpleTToPhpUnit.where_init >>
 <<@UmpleTToPhpUnit.members_Setup>>
 <<@UmpleTToPhpUnit.members_TearDown>>
 <<@UmpleTToPhpUnit.members_AllTestCases>>
 

 
<<# //appendln(realSb, gen.translate("afterCode", uClass));#>> 

}
!>>
}

